import { Vector2 } from "./types/vector";
export declare function LerpSmooth1D(x1: number, x2: number, p: number, rate: number, halfSmooth: boolean, infinite: boolean): number[];
export declare function fractionalLine(p1: Vector2, p2: Vector2, f: number, p: number): number[];
export declare function eulerStep(p1: Vector2, p2: Vector2, v1: Vector2, v2: Vector2, G: number): Vector2[];
export declare function acceleration(p1: Vector2, p2: Vector2, G: number): Vector2;
export declare function matMul(A: number[][], B: number[][]): number[][] | null;
export declare function rotateX3(A: number[][], angle: number): number[][] | null;
export declare function rotateY3(A: number[][], angle: number): number[][] | null;
export declare function rotateZ3(A: number[][], angle: number): number[][] | null;
export declare function rotateX4(A: number[][], angle: number): number[][] | null;
export declare function rotateZ4(A: number[][], angle: number): number[][] | null;
export declare function rotateZW4(A: number[][], angle: number): number[][] | null;
export declare function rotateYW4(A: number[][], angle: number): number[][] | null;
export declare function rotateYZ4(A: number[][], angle: number): number[][] | null;
export declare function rotateXW4(A: number[][], angle: number): number[][] | null;
export declare function rotateXZ4(A: number[][], angle: number): number[][] | null;
export declare function rotateXY4(A: number[][], angle: number): number[][] | null;
export declare const project3: (w: number) => number[][];
export declare const project4: (z: number) => number[][];
